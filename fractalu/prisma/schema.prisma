datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id       String  @id @default(cuid())
  title    String
  body     String
  tag      String
  password String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Instructor {
  id                 String       @id @default(cuid())
  name               String       @unique
  email              String       @unique
  bio                String
  socialLinks        SocialLink[]
  teachingExperience String
  classApplicationId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SocialLink {
  id           String     @id @default(cuid())
  url          String
  platform     String?
  instructorId String
  instructor   Instructor @relation(fields: [instructorId], references: [id])
}

model ClassApplication {
  id                  String           @id @default(cuid())
  scheduleOptions     ScheduleOption[]
  name                String           @unique
  description         String           @unique
  location            String
  expectedClassSize   Int
  scheduleConstraints String
}

enum ScheduleOption {
  WeekdayEvenings
  WeekdayNights
  WeekendMornings
  WeekendAfternoons
  WeekendEvenings
}
